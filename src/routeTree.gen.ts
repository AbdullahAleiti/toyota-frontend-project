// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TerminalsImport } from './routes/terminals'
import { Route as IndexImport } from './routes/index'
import { Route as TerminalTerminalIdImport } from './routes/terminal.$terminalId'
import { Route as DefectsFilterCodeImport } from './routes/defects.$filterCode'
import { Route as DefectDefectIdImport } from './routes/defect.$defectId'

// Create/Update Routes

const TerminalsRoute = TerminalsImport.update({
  path: '/terminals',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TerminalTerminalIdRoute = TerminalTerminalIdImport.update({
  path: '/terminal/$terminalId',
  getParentRoute: () => rootRoute,
} as any)

const DefectsFilterCodeRoute = DefectsFilterCodeImport.update({
  path: '/defects/$filterCode',
  getParentRoute: () => rootRoute,
} as any)

const DefectDefectIdRoute = DefectDefectIdImport.update({
  path: '/defect/$defectId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/terminals': {
      preLoaderRoute: typeof TerminalsImport
      parentRoute: typeof rootRoute
    }
    '/defect/$defectId': {
      preLoaderRoute: typeof DefectDefectIdImport
      parentRoute: typeof rootRoute
    }
    '/defects/$filterCode': {
      preLoaderRoute: typeof DefectsFilterCodeImport
      parentRoute: typeof rootRoute
    }
    '/terminal/$terminalId': {
      preLoaderRoute: typeof TerminalTerminalIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  TerminalsRoute,
  DefectDefectIdRoute,
  DefectsFilterCodeRoute,
  TerminalTerminalIdRoute,
])
